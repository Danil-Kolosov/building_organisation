@page
@model ConstructionOrganisation.Pages.Reports.sp_get_object_report
@{
    ViewData["Title"] = "Отчет о сооружении объекта";
}

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>

    <form method="get" class="mb-4">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="objectNumber">Номер объекта:</label>
                    <input type="number" class="form-control" id="objectNumber" 
                           name="objectNumber" value="@Model.ObjectNumber" />
                </div>
            </div>
            <div class="col-md-4 align-self-end">
                <button type="submit" class="btn btn-primary">Сформировать отчет</button>
            </div>
        </div>
    </form>

    @if (Model.ReportData != null && Model.ReportData.Any())
    {
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>№ работы</th>
                            <th>Тип работы</th>
                            <th>План. начало</th>
                            <th>План. окончание</th>
                            <th>Факт. начало</th>
                            <th>Факт. окончание</th>
                            <th>Материалы</th>
                            <th>Факт. стоимость</th>
                            <th>Отклонение стоимости</th>
                            <th>Отклонение по началу</th>
                            <th>Отклонение по окончанию</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model.ReportData)
                    {
                                <tr class="@GetRowClass(item)">
                                    <td>@item.WorkNumber</td>
                                    <td>@item.WorkTypeName</td>
                                    <td>@item.PlannedStartDate.ToString("dd.MM.yyyy")</td>
                                    <td>@item.PlannedEndDate.ToString("dd.MM.yyyy")</td>
                                    <td>@(item.RealStartDate.HasValue ? item.RealStartDate.Value.ToString("dd.MM.yyyy") : "-")</td>
                                    <td>@(item.RealEndDate.HasValue ? item.RealEndDate.Value.ToString("dd.MM.yyyy") : "-")</td>
                                    <td>@item.Materials</td>
                                    <td>@(item.RealCost.HasValue ? item.RealCost.Value.ToString("N2") + " руб." : "-")</td>
                                    <td class="@GetCostDifferenceClass(item.CostDifference)">
                                @(item.CostDifference.HasValue ? item.CostDifference.Value.ToString("N2") + " руб." : "-")
                                    </td>
                                    <td class="@GetDateDifferenceClass(item.StartDateDifference)">
                                @FormatDateDifference(item.StartDateDifference)
                                    </td>
                                    <td class="@GetDateDifferenceClass(item.EndDateDifference)">
                                @FormatDateDifference(item.EndDateDifference)
                                    </td>
                                </tr>
                    }
                    </tbody>
                </table>
            </div>
    }
    else if (Model.ReportData != null)
    {
            <div class="alert alert-warning">Данные по объекту не найдены</div>
    }
</div>

@functions {
    string GetRowClass(ConstructionOrganisation.Pages.Reports.sp_get_object_report.ObjectReport item)
    {
        if (!item.RealStartDate.HasValue || !item.RealEndDate.HasValue)
            return "table-warning";
        if (item.CostDifference > 0 || item.EndDateDifference > 0)
            return "table-danger";
        if (item.CostDifference < 0 && item.EndDateDifference < 0)
            return "table-success";
        return "";
    }

    string GetCostDifferenceClass(decimal? difference)
    {
        if (!difference.HasValue) return "";
        return difference > 0 ? "text-danger" : "text-success";
    }

    string GetDateDifferenceClass(int? difference)
    {
        if (!difference.HasValue) return "";
        return difference > 0 ? "text-danger" : "text-success";
    }

    string FormatDateDifference(int? difference)
    {
        if (!difference.HasValue) return "-";
        return difference > 0 ? $"+{difference} дн." : $"{difference} дн.";
    }
}
